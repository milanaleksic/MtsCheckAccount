<?xml version="1.0" encoding="ISO-8859-1"?>
<project name="ZTECheckAccountStatus" basedir="." default="installation">

	<property file="build.properties" />
    <loadfile srcfile="${version.file}" property="src.version" />

	<!-- Classpath that contains only compiled classes + libraries in lib dir -->
	<path id="classpath" path="${compile.dir}">
		<fileset dir="${lib.build.dir}">
            <include name="*.jar" />
        </fileset>
		<fileset dir="${lib.dir}">
			<include name="*.jar" />
		</fileset>
	</path>

	<!-- Compiling task for Java and Groovy files. Java files always go to compile.dir
	but Groovy files go to (PARAMETER) groovy-target-dir -->
	<target name="compile-java-and-groovy">
		<delete dir="${compile.dir}" failonerror="false" />
		<delete dir="${groovy-target-dir}" failonerror="false" />

		<mkdir dir="${compile.dir}" />
		<mkdir dir="${groovy-target-dir}" />

		<delete>
			<fileset dir="${compile.dir}" includes="**/*.groovy">
				<exclude name="${groovy.dont.compile.filter}" />
			</fileset>
		</delete>
		<groovyc srcdir="${src.dir}" destdir="${groovy-target-dir}" verbose="false" encoding="UTF-8">
			<classpath refid="classpath" />
			<exclude name="${groovy.dont.compile.filter}" />
		</groovyc>
	</target>

	<target name="init-3rdparty-tasks">
		<!-- 3rd party tasks -->
		<taskdef resource="net/sf/antcontrib/antcontrib.properties" classpathref="classpath" />
		<taskdef name="nsis" classname="net.sf.nsisant.Task" classpathref="classpath" />
		<taskdef name="groovyc" classname="org.codehaus.groovy.ant.Groovyc" classpathref="classpath" />
	</target>

	<target name="clean" description="Clear all target directories" depends="init-3rdparty-tasks">
		<delete dir="${compile.dir}" failonerror="false" />
		<delete dir="${groovy.compile.dir}" failonerror="false" />
	    <delete dir="${distro.dir}" failonerror="false" />
	</target>

	<target name="compile" description="Copying compiled files" depends="clean">
        <!-- Check if application is started and holds lock -->
        <copy file="${startup.dir}/.launcher" tofile="${startup.dir}/.launcher.bak" overwrite="true" />
        <delete file="${startup.dir}/.launcher.bak" />
        <echo message="Application is not started so .launcher file is not locked - proceeding with build" level="info" />
        	
		<mkdir dir="${compile.dir}" />

		<antcall target="compile-java-and-groovy">
			<param name="groovy-target-dir" value="${compile.dir}" />
		</antcall>
		<tstamp />
	</target>

	<target name="build" description="Creates tool JARs" depends="compile">
		<mkdir dir="${distro.dir}" />

		<jar destfile="${distro.dir}/CheckPostpaidAccount-${src.version}.jar">
			<manifest>
				<attribute name="Manifest-Version" value="1.0" />
				<attribute name="Main-Class" value="net.milanaleksic.mtscheckaccount.Startup" />
				<attribute name="Implementation-Version" value="${src.version}" />
			</manifest>
			<fileset dir="${compile.dir}">
				<include name="**/*.*" />
			</fileset>
		</jar>
	</target>

	<target name="installation" description="Creates the installation" depends="build">
		<delete includes="mtscheckaccount-${src.version}.*.exe" dir="." />
		<delete file="mtscheckaccount-${src.version}-linux.tar.gz" failonerror="false" />

		<copy todir="${distro.dir}" overwrite="true">
			<fileset dir="${startup.dir}">
				<include name=".launcher" />
				<include name="*.xml" />
				<include name="*.jpg" />
				<include name="*.png" />
				<include name="startup" />
			</fileset>
		</copy>

		<mkdir dir="install" />
		<mkdir dir="install/bin" />
		<mkdir dir="install/lib" />

		<copy todir="install/lib">
			<fileset dir="${distro.dir}">
                <include name="*.jar" />
            </fileset>
			<fileset dir="${lib.dir}">
				<include name="*.jar" />
			</fileset>
		</copy>

		<copy todir="install/bin">
			<fileset dir="${distro.dir}" excludes="*.jar" />
		</copy>
        
        <echo file="install/bin/version.txt" message="${src.version}" />

		<copy todir="install">
			<fileset dir="${root.dir}" includes="*.exe" />
			<fileset dir="${root.dir}" includes="*.txt" />
		</copy>

		<tar destfile="mtscheckaccount-${src.version}-linux.tar.gz" compression="gzip">
			<tarfileset dir="install" prefix="" excludes="**/*.exe,**/.launcher,**/*.dll" />
			<tarfileset dir="${lib.linux.dir}" prefix="rxtx-natives" />
		</tar>
		
		<if>
			<equals arg1="${nsis.enabled}" arg2="true" />
			<then>
				<echo message="Running NSIS target x86" level="info" />
                <copy todir="install/bin" file="${lib.win.dir}/x86/rxtxSerial.dll" overwrite="true" />
				<nsis script="setupScript" verbosity="2" noconfig="yes" path="${nsis.home}">
					<define name="VERSION" value="${src.version}" />
                    <define name="ARCHITECTURE" value="x86" />
				</nsis>
                <echo message="Running NSIS target ia64" level="info" />
                <copy todir="install/bin" file="${lib.win.dir}/ia64/rxtxSerial.dll" overwrite="true" />
				<nsis script="setupScript" verbosity="2" noconfig="yes" path="${nsis.home}">
					<define name="VERSION" value="${src.version}" />
                    <define name="ARCHITECTURE" value="ia64" />
				</nsis>
			</then>
			<else>
				<echo message="NSIS OMITTED" />
			</else>
		</if>

		<if>
			<equals arg1="${nsis.dont.delete.installation.files}" arg2="true" />
			<then>
				<echo message="DELETION OF INSTALLATION FILES OMITTED" />
			</then>
			<else>
				<delete dir="install" failonerror="false" />
			</else>
		</if>

		<delete dir="${distro.dir}" failonerror="false" />
		<delete dir="${compile.dir}" failonerror="false" />
	</target>

</project>